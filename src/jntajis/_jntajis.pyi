import typing

class IncrementalEncoder:
    def encoder(self, in_: str, final: bool) -> bytes: ...
    def reset(self) -> None: ...
    def getstate(self) -> int: ...
    def setstate(self, state: int) -> None: ...
    def __init__(self, encoding: str, conv_mode: int) -> None: ...

class TransliterationError(Exception): ...

def encode(encoding: str, in_: str, conv_mode: int) -> bytes: ...
def decode(encoding: str, in_: bytes) -> str: ...
def jnta_shrink_translit(
    in_: str, replacement: str = "\ufffe", passthrough: bool = False
) -> str: ...
def mj_shrink_candidates(in_: str, combo: int) -> typing.List[str]: ...
